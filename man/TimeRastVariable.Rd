% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_TimeRastData.R
\name{TimeRastVariable}
\alias{TimeRastVariable}
\alias{new_TimeRastVariable}
\alias{new_TimeRastVariable.SpatRaster}
\alias{new_TimeRastVariable.array}
\title{create \code{TimeRastVariable} data}
\usage{
new_TimeRastVariable(data_, Name_, Unit_, Time_, ...)

\method{new_TimeRastVariable}{SpatRaster}(data_, Name_, Unit_, Time_, ...)

\method{new_TimeRastVariable}{array}(data_, Name_, Unit_, Time_, Spat_EPSG, Spat_extent, ...)
}
\arguments{
\item{data_}{(num-array or terra::SpatRaster)
\itemize{
\item 3D (array) for \code{\link[=new_TimeRastVariable.array]{new_TimeRastVariable.array()}}, it must in the \strong{(time, x, y)} dimension-order, use the function \code{\link[=aperm]{aperm()}} to adjust the dimension-order
\item (terra::SpatRaster) (multilayer) for \code{\link[=new_TimeRastVariable.SpatRaster]{new_TimeRastVariable.SpatRaster()}}, created by \code{\link[terra:rast]{terra::rast()}}
}}

\item{Name_, Unit_}{(char) name and unit of Variable, \code{Unit_} should be  \code{\link[units:units]{units::as_units()}}}

\item{Time_}{(vector of lubridate::timepoint) time dimension, created by \code{\link[lubridate:as_date]{lubridate::as_date()}} or \code{\link[lubridate:as_date]{lubridate::as_datetime()}}}

\item{...}{other parameters}

\item{Spat_EPSG}{(integer) EPSG code of the CRS (Coordinate Reference System)}

\item{Spat_extent}{(vector of numric), extension of the Raster in c(xmin, xmax, ymin, ymax),
it can be projected east- and north-meter or global longitude- and latitude-degree}
}
\value{
\code{TimeRastVariable} data
}
\description{
\code{TimeRastVariable} is a data class that based on 3D-array. There are
time, spatial two dimensions in "macro",
but actually due to the spatial dimension in 2D-raster,
so there are there dimension in data: \strong{(time, x, y)}.
}
